plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.videoStreaming'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

 

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.8.1'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.json:json:20220320'
	implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	implementation 'org.mapstruct:mapstruct-jdk8:1.5.3.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
	compileOnly 'org.projectlombok:lombok:1.18.24'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'com.h2database:h2:2.1.214'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
	
}

tasks.named('test') {
	useJUnitPlatform()
}

def profile = 'dev'

bootRun {
  args = ["--spring.profiles.active=${project.properties['profile'] ?: profile }"]
}
